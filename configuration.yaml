# Loads default set of integrations. Do not remove.
default_config:

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
homeassistant:
  customize:
    zone.home:
      radius: 200
  whitelist_external_dirs:
    - /share


recorder:
  db_url: *******
influxdb:
  host: a0d7b954-influxdb
  port: 8086
  database: *****
  username: *****
  password: *****
  max_retries: 3
  default_measurement: state
media_source:
switch:
  - platform: wake_on_lan
    mac: B4-2E-99-88-73-67
    name: "My Computer"
    host: 192.168.1.105
    turn_off:
      service: hassio.addon_stdin
      data:
        addon: core_rpc_shutdown
        input: Spl1nt

sensor:
  - platform: openhardwaremonitor
    host: 192.168.1.105
  - platform: openhardwaremonitor
    host: 192.168.1.36
  - platform: template
    sensors:
      dir_1750_uptime_days:
        friendly_name: "dir_1750 Uptime in Days"
        unit_of_measurement: "days"
        value_template: "{{ (states('sensor.dir_1750_uptime') | float / 86400) | round(0) }}"
      netgear_dgn1000_router_uptime_days:
        friendly_name: "netgear_dgn1000_router_uptime in Days"
        unit_of_measurement: "days"
        value_template: "{{ (states('sensor.netgear_dgn1000_router_uptime') | float / 86400) | round(0) }}"
      archer_vr1600v_uptime_days:
        friendly_name: "archer_vr1600v_uptime in Days"
        unit_of_measurement: "days"
        value_template: "{{ (states('sensor.archer_vr1600v_uptime') | float / 86400) | round(0) }}"


mqtt:
  sensor:
    - name: "Octoprint Gcode Filename"
      state_topic: "octoPrint/hass/printing"
      value_template: "{{ value_json.job.file.display }}"
climate:
  - platform: tasmota_irhvac
    name: aircon
    command_topic: "cmnd/tasmota/irhvac"
    state_topic: "tele/tasmota/RESULT"
    temperature_sensor: sensor.irhvac_dht11_temperature #optional this sensor is used to display current temp on the AC card
    protocol: "GREE"
    min_temp: 16 #optional - default 16 int value
    max_temp: 30 #optional - default 32 int value
    target_temp: 20 #optional - default 26 int value
    initial_operation_mode: "off" # optional - default "off" string value
    away_temp: 20 #optional - default 24 int value
    precision: 1.0 #optional - default 1.0 float value
    supported_modes:
      - heat
      - cool
      - dry
      - fan_only
      - auto
      - "off" #Turns the AC off - Should be quoted and should be always included here
    supported_fan_speeds:
      #- low
      - min
      - max
      - medium
      # - high
      #- middle
      #- focus
      #- diffuse

      - auto
    supported_swing_list:
      - "off"
      - vertical #up to down
      #- horizontal # Left to right - remove if your AC does not support it
      #- both # remove if your AC does not support horizontal
 #   default_light_mode: "On"  
    hvac_model: "1" # string value
    celsius_mode: "On" #optional - default "On" string value - you can remove it if you use celsius


device_tracker:
  - platform: bluetooth_le_tracker
    interval_seconds: 60
    consider_home: 240
    new_device_defaults:
      track_new_devices: true
 
      
ombi:
  host: 192.168.1.36
  api_key: *****
  username: admin
  port: 5000
  urlbase: /
  ssl: false
shell_command:
  run_curl: >
    curl -X {{ method }}
    {% if headers is defined and headers|length > 0 %}
    {% for key, value in headers.items() %}
    -H "{{ key }}: {{ value }}"
    {% endfor %}
    {% endif %}
    {% if data is defined and data != '' %}
    -d '{{ data }}'
    {% endif %}
    '{{ url }}'

  execute_command: '/bin/bash /config/scripts/execute_command.sh "{{ command }}"'
input_text:
  shell_command_response:
    name: Shell Command Response
    initial: "Waiting for command..."
